{"version":3,"sources":["next-canvas-multiline-text.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"next-canvas-multiline-text.js","sourcesContent":["(function() {\n  var global = global || this || window || Function('return this')();\n  var nx = global.nx || require('next-js-core2');\n  var EMPTY_STR = '';\n  var DEFAULT_OPTIONS = {\n    lineClamp: 100,\n    limitWidth: 500,\n    lineHeight: 20,\n    canvas: null,\n    callback: nx.noop,\n    text: '',\n    tail: '...'\n  };\n\n  var trim = function(str) {\n    if (!str) return str;\n    return str.replace(/[\\r\\n]/g, '');\n  };\n\n  nx.canvasMultilineText = function(inOptions) {\n    var options = nx.mix(null, DEFAULT_OPTIONS, inOptions);\n    var ctx = options.canvas.getContext('2d');\n    var words = trim(options.text).split(EMPTY_STR);\n    var tmp = EMPTY_STR;\n    var line = 1;\n    var items = [];\n    var tms = null;\n    var len = words.length;\n    var len_ = len - 1;\n    var i = 0;\n\n    if (!options.text) return { line: 0, items: items };\n    // initial setting:\n    options.callback(ctx);\n\n    for (; i < len; i++) {\n      var word = words[i];\n      tmp += word;\n      tms = ctx.measureText(tmp);\n      if (tms.width >= options.limitWidth) {\n        items.push(tmp);\n        // update line & reset\n        line++;\n        tmp = EMPTY_STR;\n      }\n\n      if (line - 1 === options.lineClamp) {\n        break;\n      }\n    }\n\n    if (i < len_) {\n      var last = items[items.length - 1].split(EMPTY_STR);\n      last.splice(-2, 2);\n      last.push(options.tail);\n      items[items.length - 1] = last.join(EMPTY_STR);\n    }\n\n    tmp && items.push(tmp);\n    //code goes here.\n    return { line: Math.min(line, options.lineClamp), items: items };\n  };\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = nx.canvasMultilineText;\n  }\n})();\n"]}